import{u as L,aL as g,a as y,bt as P,bI as I}from"./index.851b5188.js";import{l as F,_ as j}from"./lodash.68b7405b.js";import{i as R,f as b,a as M}from"./index.23da2c90.js";import{q as k}from"./index.2d754617.js";import{q as G}from"./index.71fea87c.js";import{l as N}from"./index.b3847370.js";import{s as O}from"./index.834fe2cc.js";import{s as c}from"./service.4be3af67.js";import{p as S}from"./common.ee372ad3.js";import{q as $}from"./index.57e264b5.js";import{f as d}from"./index.d671386a.js";const ne=()=>{const{t:e}=L(),o=new Date,i=o.getFullYear(),a=o.getMonth(),u=o.getDate(),n=g({importFormRef:y(),importForm:{name:"",file:""},saving:!1,importRules:{file:{required:!0,trigger:["input","blur"],validator(){if(n.importForm.name==="")return new Error(e("project.workflow.enter_name_tips"))}}}}),l=g({startFormRef:y(),startForm:{processDefinitionCode:-1,startEndTime:[new Date(i,a,u),new Date(i,a,u)],scheduleTime:"",dataDateType:1,failureStrategy:"CONTINUE",warningType:"NONE",warningGroupId:null,execType:"START_PROCESS",startNodeList:"",taskDependType:"TASK_POST",complementDependentMode:"OFF_MODE",runMode:"RUN_MODE_SERIAL",processInstancePriority:"MEDIUM",workerGroup:"default",tenantCode:"default",environmentCode:null,startParams:null,expectedParallelismNumber:"",dryRun:0,testFlag:0,version:null,allLevelDependent:"false",executionOrder:"DESC_ORDER"},saving:!1,rules:{scheduleTime:{trigger:["input","blur"],validator(T,p){if(!p)return;if(!/(((19|20)[0-9]{2})-((0[1-9])|(1[0-2]))-((0[1-9])|((1|2)[0-9])|(3[0-1]))([ ])([0-1]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]))(,(((19|20)[0-9]{2})-((0[1-9])|(1[0-2]))-((0[1-9])|((1|2)[0-9])|(3[0-1]))([ ])([0-1]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])))*$/.test(p))return new Error(e("project.workflow.schedule_date_tips"));if(p.split(",").length>100)return new Error(e("project.workflow.schedule_date_limit"))}}}}),h=g({timingFormRef:y(),timingForm:{startEndTime:[new Date(i,a,u),new Date(i+100,a,u)],crontab:"0 0 * * * ? *",timezoneId:Intl.DateTimeFormat().resolvedOptions().timeZone,failureStrategy:"CONTINUE",warningType:"NONE",processInstancePriority:"MEDIUM",warningGroupId:null,workerGroup:"default",tenantCode:"default",environmentCode:null},saving:!1}),w=g({copyFormRef:y(),copyForm:{projectCode:null},saving:!1,copyRules:{projectCode:{required:!0,trigger:["input","blur"],validator(){if(w.copyForm.projectCode==="")return new Error(e("project.workflow.project_name_required"))}}}});return{importState:n,startState:l,timingState:h,copyState:w}};function ie(e,o){return c({url:`/projects/${o}/schedules`,method:"get",params:e})}function _(e,o){return c({url:`/projects/${o}/schedules`,method:"post",data:e})}function q(e,o){return c({url:`/projects/${o}/schedules/preview`,method:"post",data:e})}function H(e,o,i){return c({url:`/projects/${o}/schedules/${i}`,method:"put",data:e})}function se(e,o){return c({url:`/projects/${o}/schedules/${e}`,method:"delete",params:{scheduleId:e}})}function ae(e,o){return c({url:`/projects/${e}/schedules/${o}/offline`,method:"post"})}function me(e,o){return c({url:`/projects/${e}/schedules/${o}/online`,method:"post"})}function ce(e,o){const{t:i}=L(),a=P(),u=I(),n=g({projectCode:Number(u.params.projectCode),workerGroups:[],tenantList:[],alertGroups:[],environmentList:[],startParamsList:[],schedulePreviewList:[]}),l={},h=()=>{e.importForm.name="",e.importForm.file=""},w=async()=>{if(await e.importFormRef.validate(),!e.saving){e.saving=!0;try{const t=new FormData;t.append("file",e.importForm.file);const r=Number(a.currentRoute.value.params.projectCode);await R(t,r),window.$message.success(i("project.workflow.success")),e.saving=!1,o.emit("updateList"),o.emit("update:show"),h()}catch{e.saving=!1}}},T=async(t,r)=>{if(await e.startFormRef.validate(),!e.saving){e.saving=!0;try{e.startForm.processDefinitionCode=t,e.startForm.version=r;const s=F.exports.omit(e.startForm,["startEndTime","scheduleTime","dataDateType"]);if(e.startForm.dataDateType===1){const m=d(new Date(e.startForm.startEndTime[0]),"yyyy-MM-dd HH:mm:ss"),v=d(new Date(e.startForm.startEndTime[1]),"yyyy-MM-dd HH:mm:ss");s.scheduleTime=JSON.stringify({complementStartDate:m,complementEndDate:v})}else s.scheduleTime=JSON.stringify({complementScheduleDateList:e.startForm.scheduleTime});const f={};for(const m of n.startParamsList)m.value!==""&&(f[m.prop]=m.value);s.startParams=j.isEmpty(f)?"":JSON.stringify(f),await O(s,n.projectCode),window.$message.success(i("project.workflow.success")),e.saving=!1,o.emit("updateList"),o.emit("update:show")}catch{e.saving=!1}}},p=async t=>{if(await e.timingFormRef.validate(),!e.saving){e.saving=!0;try{const r=C();r.processDefinitionCode=t,await _(r,n.projectCode),window.$message.success(i("project.workflow.success")),e.saving=!1,o.emit("updateList"),o.emit("update:show")}catch{e.saving=!1}}},D=async t=>{if(await e.timingFormRef.validate(),!e.saving){e.saving=!0;try{const r=C();r.id=t,await H(r,n.projectCode,t),window.$message.success(i("project.workflow.success")),e.saving=!1,o.emit("updateList"),o.emit("update:show")}catch{e.saving=!1}}},E=async t=>{if(await e.copyFormRef.validate(),!e.saving){e.saving=!0;try{const r={codes:j.join(t,","),targetProjectCode:e.copyForm.projectCode};await b(r,n.projectCode),window.$message.success(i("project.workflow.success")),e.saving=!1,o.emit("updateList"),o.emit("update:show"),e.copyForm.projectCode=""}catch{e.saving=!1}}},C=()=>{const t=d(S(e.timingForm.startEndTime[0]),"yyyy-MM-dd HH:mm:ss"),r=d(S(e.timingForm.startEndTime[1]),"yyyy-MM-dd HH:mm:ss");return{schedule:JSON.stringify({startTime:t,endTime:r,crontab:e.timingForm.crontab,timezoneId:e.timingForm.timezoneId}),failureStrategy:e.timingForm.failureStrategy,warningType:e.timingForm.warningType,processInstancePriority:e.timingForm.processInstancePriority,warningGroupId:e.timingForm.warningGroupId?e.timingForm.warningGroupId:0,workerGroup:e.timingForm.workerGroup,tenantCode:e.timingForm.tenantCode,environmentCode:e.timingForm.environmentCode}};return{variables:n,handleImportDefinition:w,handleStartDefinition:T,handleCreateTiming:p,handleUpdateTiming:D,handleBatchCopyDefinition:E,getWorkerGroups:()=>{k().then(t=>{n.workerGroups=t.map(r=>({label:r,value:r}))})},getTenantList:()=>{$().then(t=>{n.tenantList=t.map(r=>({label:r.tenantCode,value:r.tenantCode}))})},getAlertGroups:()=>{N().then(t=>{n.alertGroups=t.map(r=>({label:r.groupName,value:r.id}))})},getEnvironmentList:()=>{G().then(t=>{n.environmentList=t.map(r=>({label:r.name,value:r.code,workerGroups:r.workerGroups}))})},getStartParamsList:t=>{if(l[t]){n.startParamsList=F.exports.cloneDeep(l[t]);return}M(t,n.projectCode).then(r=>{n.startParamsList=r.processDefinition.globalParamList,l[t]=F.exports.cloneDeep(n.startParamsList)})},getPreviewSchedule:()=>{e.timingFormRef.validate(async t=>{if(!t){const r=Number(a.currentRoute.value.params.projectCode),s=d(new Date(e.timingForm.startEndTime[0]),"yyyy-MM-dd HH:mm:ss"),f=d(new Date(e.timingForm.startEndTime[1]),"yyyy-MM-dd HH:mm:ss"),m=JSON.stringify({startTime:s,endTime:f,crontab:e.timingForm.crontab,timezoneId:e.timingForm.timezoneId});q({schedule:m},r).then(v=>{n.schedulePreviewList=v})}})}}}export{ce as a,ae as b,se as d,me as o,ie as q,ne as u};
