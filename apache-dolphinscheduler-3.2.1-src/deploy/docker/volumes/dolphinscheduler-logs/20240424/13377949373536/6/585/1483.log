[INFO] 2024-04-24 16:17:26.220 +0800 - ***********************************************************************************************
[INFO] 2024-04-24 16:17:26.222 +0800 - *********************************  Initialize task context  ***********************************
[INFO] 2024-04-24 16:17:26.223 +0800 - ***********************************************************************************************
[INFO] 2024-04-24 16:17:26.223 +0800 - Begin to initialize task
[INFO] 2024-04-24 16:17:26.223 +0800 - Set task startTime: 1713946646223
[INFO] 2024-04-24 16:17:26.223 +0800 - Set task appId: 585_1483
[INFO] 2024-04-24 16:17:26.226 +0800 - End initialize task {
  "taskInstanceId" : 1483,
  "taskName" : "keyword filtering",
  "firstSubmitTime" : 1713946646208,
  "startTime" : 1713946646223,
  "taskType" : "PYTHON",
  "workflowInstanceHost" : "172.18.0.9:5678",
  "host" : "172.18.1.1:1234",
  "logPath" : "/opt/dolphinscheduler/logs/20240424/13377949373536/6/585/1483.log",
  "processId" : 0,
  "processDefineCode" : 13377949373536,
  "processDefineVersion" : 6,
  "processInstanceId" : 585,
  "scheduleTime" : 0,
  "globalParams" : "[{\"prop\":\"keywords\",\"direct\":\"IN\",\"type\":\"VARCHAR\",\"value\":\"\\\"singapore\\\", \\\"lol\\\"\"}]",
  "executorId" : 1,
  "cmdTypeIfComplement" : 0,
  "tenantCode" : "default",
  "processDefineId" : 0,
  "projectId" : 0,
  "projectCode" : 13010050770016,
  "taskParams" : "{\"localParams\":[],\"rawScript\":\"import pyspark\\nfrom pyspark.sql import SparkSession\\nfrom pyspark.sql.functions import concat, lit, split, udf, from_unixtime, col\\nfrom pyspark.sql.types import StringType\\nfrom pyspark import SparkFiles\\n\\n# Initialize Spark session in local mode\\nspark = SparkSession.builder \\\\\\n    .appName(\\\"Reddit Keyword Filtering\\\") \\\\\\n    .master(\\\"local\\\") \\\\\\n    .config(\\\"spark.jars.packages\\\", \\\"org.apache.spark:spark-sql-kafka-0-10_2.13:3.5.1\\\") \\\\\\n    .config(\\\"spark.driver.extraJavaOptions\\\", \\\"-Divy.cache.dir=/tmp -Divy.home=/tmp\\\") \\\\\\n    .getOrCreate()\\n\\n# message = ${message}\\nmessage = {\\n  \\\"user\\\": \\\"premiumplatinum\\\",\\n  \\\"content\\\": \\\"singapore is stupid\\\",\\n  \\\"url\\\": \\\"https://www.reddit.com/r/singapore/comments/1c9itat/21apr2024_orchard_road_camcar_turning_right_into/\\\",\\n  \\\"context\\\": \\\"21apr2024 orchard road camcar turning right into centrepoint get tbone by cyclist\\\",\\n  \\\"score\\\": 131,\\n  \\\"subreddit\\\": \\\"singapore\\\",\\n  \\\"type\\\": \\\"post\\\",\\n  \\\"id\\\": \\\"1c9itat\\\",\\n  \\\"datetime\\\": \\\"2024-04-21 22:10:42\\\"\\n}\\n\\nrdd = spark.sparkContext.parallelize([message])\\ndf = spark.read.json(rdd)\\n\\n# filter rows containing specific keywords\\nkeywords = [${keywords}]\\n\\n# initialize the filter condition with False\\nfilter_condition = col(\\\"content\\\").contains(keywords[0])\\n\\n# loop through the rest of the keywords and update the filter condition\\nfor keyword in keywords[1:]:\\n    filter_condition = filter_condition | col(\\\"content\\\").contains(keyword)\\n\\n# apply the filter condition to the DataFrame\\nfiltered_df = df.filter(filter_condition)\\nfiltered_df.show()\\n\\n# pass whether the data is relevant to singapore or not to the downstream tasks\\n\\nprint('#{setValue(is_relevant=%s)}' % str(True if filtered_df.count()==1 else False))\\n\\n\\n\\n\\n# stop Spark session\\nspark.stop()\\n\",\"resourceList\":[]}",
  "environmentConfig" : "export SPARK_HOME=/opt/spark-3.5.1-bin-hadoop3-scala2.13\nexport JAVA_HOME=/opt/java/openjdk\nexport PYSPARK_DRIVER_PYTHON=/bin/python3.11\nexport PYTHON_LAUNCHER=/bin/python3.11\nexport PYSPARK_PYTHON=/bin/python3.11",
  "prepareParamsMap" : {
    "system.task.definition.name" : {
      "prop" : "system.task.definition.name",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : "keyword filtering"
    },
    "system.project.name" : {
      "prop" : "system.project.name",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : null
    },
    "REDDIT_HOME" : {
      "prop" : "REDDIT_HOME",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : "/local_storage/reddit"
    },
    "keywords" : {
      "prop" : "keywords",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : "\"singapore\", \"lol\""
    },
    "system.biz.curdate" : {
      "prop" : "system.biz.curdate",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : "20240424"
    },
    "system.task.instance.id" : {
      "prop" : "system.task.instance.id",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : "1483"
    },
    "message" : {
      "prop" : "message",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : ""
    },
    "system.task.definition.code" : {
      "prop" : "system.task.definition.code",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : "13377752024032"
    },
    "system.datetime" : {
      "prop" : "system.datetime",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : "20240424161726"
    },
    "system.project.code" : {
      "prop" : "system.project.code",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : "13010050770016"
    },
    "system.workflow.instance.id" : {
      "prop" : "system.workflow.instance.id",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : "585"
    },
    "system.biz.date" : {
      "prop" : "system.biz.date",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : "20240423"
    },
    "system.workflow.definition.name" : {
      "prop" : "system.workflow.definition.name",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : "filter_post"
    },
    "system.workflow.definition.code" : {
      "prop" : "system.workflow.definition.code",
      "direct" : "IN",
      "type" : "VARCHAR",
      "value" : "13377949373536"
    }
  },
  "taskAppId" : "585_1483",
  "taskTimeout" : 2147483647,
  "workerGroup" : "default",
  "delayTime" : 0,
  "currentExecutionStatus" : "SUBMITTED_SUCCESS",
  "endTime" : 0,
  "varPool" : "[{\"prop\":\"message\",\"direct\":\"IN\",\"type\":\"VARCHAR\",\"value\":\"\"}]",
  "dryRun" : 0,
  "paramsMap" : { },
  "cpuQuota" : -1,
  "memoryMax" : -1,
  "testFlag" : 0,
  "logBufferEnable" : false,
  "dispatchFailTimes" : 0
}
[INFO] 2024-04-24 16:17:26.227 +0800 - ***********************************************************************************************
[INFO] 2024-04-24 16:17:26.227 +0800 - *********************************  Load task instance plugin  *********************************
[INFO] 2024-04-24 16:17:26.227 +0800 - ***********************************************************************************************
[INFO] 2024-04-24 16:17:26.233 +0800 - Send task status RUNNING_EXECUTION master: 172.18.1.1:1234
[INFO] 2024-04-24 16:17:26.233 +0800 - TenantCode: default check successfully
[INFO] 2024-04-24 16:17:26.234 +0800 - WorkflowInstanceExecDir: /tmp/dolphinscheduler/exec/process/default/13010050770016/13377949373536_6/585/1483 check successfully
[INFO] 2024-04-24 16:17:26.234 +0800 - Create TaskChannel: org.apache.dolphinscheduler.plugin.task.python.PythonTaskChannel successfully
[INFO] 2024-04-24 16:17:26.234 +0800 - Download resources successfully: 
ResourceContext(resourceItemMap={})
[INFO] 2024-04-24 16:17:26.235 +0800 - Download upstream files: [] successfully
[INFO] 2024-04-24 16:17:26.235 +0800 - Task plugin instance: PYTHON create successfully
[INFO] 2024-04-24 16:17:26.236 +0800 - Initialize python task params {
  "localParams" : [ ],
  "varPool" : null,
  "rawScript" : "import pyspark\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import concat, lit, split, udf, from_unixtime, col\nfrom pyspark.sql.types import StringType\nfrom pyspark import SparkFiles\n\n# Initialize Spark session in local mode\nspark = SparkSession.builder \\\n    .appName(\"Reddit Keyword Filtering\") \\\n    .master(\"local\") \\\n    .config(\"spark.jars.packages\", \"org.apache.spark:spark-sql-kafka-0-10_2.13:3.5.1\") \\\n    .config(\"spark.driver.extraJavaOptions\", \"-Divy.cache.dir=/tmp -Divy.home=/tmp\") \\\n    .getOrCreate()\n\n# message = ${message}\nmessage = {\n  \"user\": \"premiumplatinum\",\n  \"content\": \"singapore is stupid\",\n  \"url\": \"https://www.reddit.com/r/singapore/comments/1c9itat/21apr2024_orchard_road_camcar_turning_right_into/\",\n  \"context\": \"21apr2024 orchard road camcar turning right into centrepoint get tbone by cyclist\",\n  \"score\": 131,\n  \"subreddit\": \"singapore\",\n  \"type\": \"post\",\n  \"id\": \"1c9itat\",\n  \"datetime\": \"2024-04-21 22:10:42\"\n}\n\nrdd = spark.sparkContext.parallelize([message])\ndf = spark.read.json(rdd)\n\n# filter rows containing specific keywords\nkeywords = [${keywords}]\n\n# initialize the filter condition with False\nfilter_condition = col(\"content\").contains(keywords[0])\n\n# loop through the rest of the keywords and update the filter condition\nfor keyword in keywords[1:]:\n    filter_condition = filter_condition | col(\"content\").contains(keyword)\n\n# apply the filter condition to the DataFrame\nfiltered_df = df.filter(filter_condition)\nfiltered_df.show()\n\n# pass whether the data is relevant to singapore or not to the downstream tasks\n\nprint('#{setValue(is_relevant=%s)}' % str(True if filtered_df.count()==1 else False))\n\n\n\n\n# stop Spark session\nspark.stop()\n",
  "resourceList" : [ ]
}
[INFO] 2024-04-24 16:17:26.236 +0800 - Success initialized task plugin instance successfully
[INFO] 2024-04-24 16:17:26.237 +0800 - Set taskVarPool: [{"prop":"message","direct":"IN","type":"VARCHAR","value":""}] successfully
[INFO] 2024-04-24 16:17:26.237 +0800 - ***********************************************************************************************
[INFO] 2024-04-24 16:17:26.237 +0800 - *********************************  Execute task instance  *************************************
[INFO] 2024-04-24 16:17:26.237 +0800 - ***********************************************************************************************
[INFO] 2024-04-24 16:17:26.237 +0800 - raw python script : import pyspark
from pyspark.sql import SparkSession
from pyspark.sql.functions import concat, lit, split, udf, from_unixtime, col
from pyspark.sql.types import StringType
from pyspark import SparkFiles

# Initialize Spark session in local mode
spark = SparkSession.builder \
    .appName("Reddit Keyword Filtering") \
    .master("local") \
    .config("spark.jars.packages", "org.apache.spark:spark-sql-kafka-0-10_2.13:3.5.1") \
    .config("spark.driver.extraJavaOptions", "-Divy.cache.dir=/tmp -Divy.home=/tmp") \
    .getOrCreate()

# message = ${message}
message = {
  "user": "premiumplatinum",
  "content": "singapore is stupid",
  "url": "https://www.reddit.com/r/singapore/comments/1c9itat/21apr2024_orchard_road_camcar_turning_right_into/",
  "context": "21apr2024 orchard road camcar turning right into centrepoint get tbone by cyclist",
  "score": 131,
  "subreddit": "singapore",
  "type": "post",
  "id": "1c9itat",
  "datetime": "2024-04-21 22:10:42"
}

rdd = spark.sparkContext.parallelize([message])
df = spark.read.json(rdd)

# filter rows containing specific keywords
keywords = [${keywords}]

# initialize the filter condition with False
filter_condition = col("content").contains(keywords[0])

# loop through the rest of the keywords and update the filter condition
for keyword in keywords[1:]:
    filter_condition = filter_condition | col("content").contains(keyword)

# apply the filter condition to the DataFrame
filtered_df = df.filter(filter_condition)
filtered_df.show()

# pass whether the data is relevant to singapore or not to the downstream tasks

print('#{setValue(is_relevant=%s)}' % str(True if filtered_df.count()==1 else False))




# stop Spark session
spark.stop()

[INFO] 2024-04-24 16:17:26.238 +0800 - tenantCode :default, task dir:/tmp/dolphinscheduler/exec/process/default/13010050770016/13377949373536_6/585/1483
[INFO] 2024-04-24 16:17:26.238 +0800 - generate python script file:/tmp/dolphinscheduler/exec/process/default/13010050770016/13377949373536_6/585/1483/py_585_1483.py
[INFO] 2024-04-24 16:17:26.238 +0800 - #-*- encoding=utf8 -*-

import pyspark
from pyspark.sql import SparkSession
from pyspark.sql.functions import concat, lit, split, udf, from_unixtime, col
from pyspark.sql.types import StringType
from pyspark import SparkFiles

# Initialize Spark session in local mode
spark = SparkSession.builder \
    .appName("Reddit Keyword Filtering") \
    .master("local") \
    .config("spark.jars.packages", "org.apache.spark:spark-sql-kafka-0-10_2.13:3.5.1") \
    .config("spark.driver.extraJavaOptions", "-Divy.cache.dir=/tmp -Divy.home=/tmp") \
    .getOrCreate()

# message = 
message = {
  "user": "premiumplatinum",
  "content": "singapore is stupid",
  "url": "https://www.reddit.com/r/singapore/comments/1c9itat/21apr2024_orchard_road_camcar_turning_right_into/",
  "context": "21apr2024 orchard road camcar turning right into centrepoint get tbone by cyclist",
  "score": 131,
  "subreddit": "singapore",
  "type": "post",
  "id": "1c9itat",
  "datetime": "2024-04-21 22:10:42"
}

rdd = spark.sparkContext.parallelize([message])
df = spark.read.json(rdd)

# filter rows containing specific keywords
keywords = ["singapore", "lol"]

# initialize the filter condition with False
filter_condition = col("content").contains(keywords[0])

# loop through the rest of the keywords and update the filter condition
for keyword in keywords[1:]:
    filter_condition = filter_condition | col("content").contains(keyword)

# apply the filter condition to the DataFrame
filtered_df = df.filter(filter_condition)
filtered_df.show()

# pass whether the data is relevant to singapore or not to the downstream tasks

print('#{setValue(is_relevant=%s)}' % str(True if filtered_df.count()==1 else False))




# stop Spark session
spark.stop()

[INFO] 2024-04-24 16:17:26.239 +0800 - Final Shell file is: 
[INFO] 2024-04-24 16:17:26.240 +0800 - ****************************** Script Content *****************************************************************
[INFO] 2024-04-24 16:17:26.240 +0800 - #!/bin/bash
BASEDIR=$(cd `dirname $0`; pwd)
cd $BASEDIR
export SPARK_HOME=/opt/spark-3.5.1-bin-hadoop3-scala2.13
export JAVA_HOME=/opt/java/openjdk
export PYSPARK_DRIVER_PYTHON=/bin/python3.11
export PYTHON_LAUNCHER=/bin/python3.11
export PYSPARK_PYTHON=/bin/python3.11
${PYTHON_LAUNCHER} /tmp/dolphinscheduler/exec/process/default/13010050770016/13377949373536_6/585/1483/py_585_1483.py
[INFO] 2024-04-24 16:17:26.240 +0800 - ****************************** Script Content *****************************************************************
[INFO] 2024-04-24 16:17:26.241 +0800 - Executing shell command : sudo -u default -i /tmp/dolphinscheduler/exec/process/default/13010050770016/13377949373536_6/585/1483/585_1483.sh
[INFO] 2024-04-24 16:17:26.255 +0800 - process start, process id is: 243
[INFO] 2024-04-24 16:17:27.256 +0800 -  -> 
	sudo: unable to change directory to /home/default: No such file or directory
[INFO] 2024-04-24 16:17:28.260 +0800 -  -> 
	:: loading settings :: url = jar:file:/opt/spark-3.5.1-bin-hadoop3-scala2.13/jars/ivy-2.5.1.jar!/org/apache/ivy/core/settings/ivysettings.xml
	Ivy Default Cache set to: /tmp
	The jars for the packages stored in: /tmp/jars
	org.apache.spark#spark-sql-kafka-0-10_2.13 added as a dependency
	:: resolving dependencies :: org.apache.spark#spark-submit-parent-3303d157-abc4-4b20-a2c5-1f308e90b90e;1.0
		confs: [default]
[INFO] 2024-04-24 16:17:34.282 +0800 -  -> 
		found org.apache.spark#spark-sql-kafka-0-10_2.13;3.5.1 in central
		found org.apache.spark#spark-token-provider-kafka-0-10_2.13;3.5.1 in central
[INFO] 2024-04-24 16:17:35.283 +0800 -  -> 
		found org.apache.kafka#kafka-clients;3.4.1 in central
		found org.lz4#lz4-java;1.8.0 in central
		found org.xerial.snappy#snappy-java;1.1.10.3 in central
[INFO] 2024-04-24 16:17:37.287 +0800 -  -> 
		found org.slf4j#slf4j-api;2.0.7 in central
[INFO] 2024-04-24 16:17:40.336 +0800 -  -> 
		found org.apache.hadoop#hadoop-client-runtime;3.3.4 in central
[INFO] 2024-04-24 16:17:41.350 +0800 -  -> 
		found org.apache.hadoop#hadoop-client-api;3.3.4 in central
[INFO] 2024-04-24 16:17:42.351 +0800 -  -> 
		found commons-logging#commons-logging;1.1.3 in central
[INFO] 2024-04-24 16:17:43.354 +0800 -  -> 
		found com.google.code.findbugs#jsr305;3.0.0 in central
		found org.scala-lang.modules#scala-parallel-collections_2.13;1.0.4 in central
[INFO] 2024-04-24 16:17:46.359 +0800 -  -> 
		found org.apache.commons#commons-pool2;2.11.1 in central
[INFO] 2024-04-24 16:17:47.369 +0800 -  -> 
	downloading https://repo1.maven.org/maven2/org/apache/spark/spark-sql-kafka-0-10_2.13/3.5.1/spark-sql-kafka-0-10_2.13-3.5.1.jar ...
[INFO] 2024-04-24 16:17:48.378 +0800 -  -> 
		[SUCCESSFUL ] org.apache.spark#spark-sql-kafka-0-10_2.13;3.5.1!spark-sql-kafka-0-10_2.13.jar (1563ms)
	downloading https://repo1.maven.org/maven2/org/apache/spark/spark-token-provider-kafka-0-10_2.13/3.5.1/spark-token-provider-kafka-0-10_2.13-3.5.1.jar ...
[INFO] 2024-04-24 16:17:49.380 +0800 -  -> 
	downloading https://repo1.maven.org/maven2/org/scala-lang/modules/scala-parallel-collections_2.13/1.0.4/scala-parallel-collections_2.13-1.0.4.jar ...
[INFO] 2024-04-24 16:17:53.387 +0800 -  -> 
		[SUCCESSFUL ] org.scala-lang.modules#scala-parallel-collections_2.13;1.0.4!scala-parallel-collections_2.13.jar (4829ms)
[INFO] 2024-04-24 16:17:54.391 +0800 -  -> 
	downloading https://repo1.maven.org/maven2/org/apache/kafka/kafka-clients/3.4.1/kafka-clients-3.4.1.jar ...
[INFO] 2024-04-24 16:18:33.487 +0800 -  -> 
		[SUCCESSFUL ] org.apache.kafka#kafka-clients;3.4.1!kafka-clients.jar (39731ms)
	downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar ...
[INFO] 2024-04-24 16:18:34.490 +0800 -  -> 
		[SUCCESSFUL ] com.google.code.findbugs#jsr305;3.0.0!jsr305.jar (622ms)
	downloading https://repo1.maven.org/maven2/org/apache/commons/commons-pool2/2.11.1/commons-pool2-2.11.1.jar ...
[INFO] 2024-04-24 16:18:35.491 +0800 -  -> 
		[SUCCESSFUL ] org.apache.commons#commons-pool2;2.11.1!commons-pool2.jar (1568ms)
	downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client-runtime/3.3.4/hadoop-client-runtime-3.3.4.jar ...
[ERROR] 2024-04-24 16:19:59.734 +0800 - kill task error
java.io.IOException: Cannot run program "pstree": error=2, No such file or directory
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
	at org.apache.dolphinscheduler.common.shell.AbstractShell.runCommand(AbstractShell.java:138)
	at org.apache.dolphinscheduler.common.shell.AbstractShell.run(AbstractShell.java:118)
	at org.apache.dolphinscheduler.common.shell.ShellExecutor.execute(ShellExecutor.java:125)
	at org.apache.dolphinscheduler.common.shell.ShellExecutor.execCommand(ShellExecutor.java:103)
	at org.apache.dolphinscheduler.common.shell.ShellExecutor.execCommand(ShellExecutor.java:86)
	at org.apache.dolphinscheduler.common.utils.OSUtils.exeShell(OSUtils.java:345)
	at org.apache.dolphinscheduler.common.utils.OSUtils.exeCmd(OSUtils.java:334)
	at org.apache.dolphinscheduler.plugin.task.api.utils.ProcessUtils.getPidsStr(ProcessUtils.java:129)
	at org.apache.dolphinscheduler.server.worker.runner.operator.TaskInstanceKillOperationFunction.killProcess(TaskInstanceKillOperationFunction.java:130)
	at org.apache.dolphinscheduler.server.worker.runner.operator.TaskInstanceKillOperationFunction.doKill(TaskInstanceKillOperationFunction.java:96)
	at org.apache.dolphinscheduler.server.worker.runner.operator.TaskInstanceKillOperationFunction.operate(TaskInstanceKillOperationFunction.java:69)
	at org.apache.dolphinscheduler.server.worker.rpc.TaskInstanceOperatorImpl.killTask(TaskInstanceOperatorImpl.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.dolphinscheduler.extract.base.server.ServerMethodInvokerImpl.invoke(ServerMethodInvokerImpl.java:41)
	at org.apache.dolphinscheduler.extract.base.server.JdkDynamicServerHandler.lambda$processReceived$0(JdkDynamicServerHandler.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.io.IOException: error=2, No such file or directory
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	... 21 common frames omitted
[INFO] 2024-04-24 16:19:59.737 +0800 - Get appIds from worker 172.18.1.1:1234, taskLogPath: /opt/dolphinscheduler/logs/20240424/13377949373536/6/585/1483.log
[INFO] 2024-04-24 16:19:59.738 +0800 - Start finding appId in /opt/dolphinscheduler/logs/20240424/13377949373536/6/585/1483.log, fetch way: log 
[INFO] 2024-04-24 16:19:59.745 +0800 - The appId is empty
[INFO] 2024-04-24 16:19:59.747 +0800 - Begin to kill process process, pid is : 243
[INFO] 2024-04-24 16:20:04.752 +0800 - Success kill task: 585_1483, pid: 243
[INFO] 2024-04-24 16:20:04.753 +0800 - kill task by cancelApplication, taskInstanceId: 1483
[ERROR] 2024-04-24 16:21:38.533 +0800 - Parse var pool error
java.io.IOException: Stream closed
	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
	at java.io.BufferedInputStream.read1(BufferedInputStream.java:283)
	at java.io.BufferedInputStream.read(BufferedInputStream.java:345)
	at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at java.io.BufferedReader.fill(BufferedReader.java:161)
	at java.io.BufferedReader.readLine(BufferedReader.java:324)
	at java.io.BufferedReader.readLine(BufferedReader.java:389)
	at org.apache.dolphinscheduler.plugin.task.api.AbstractCommandExecutor.lambda$parseProcessOutput$1(AbstractCommandExecutor.java:273)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
[INFO] 2024-04-24 16:21:38.934 +0800 - process has killed. execute path:/tmp/dolphinscheduler/exec/process/default/13010050770016/13377949373536_6/585/1483, processId:243 ,exitStatusCode:137 ,processWaitForStatus:true ,processExitValue:137
[INFO] 2024-04-24 16:21:38.935 +0800 - ***********************************************************************************************
[INFO] 2024-04-24 16:21:38.936 +0800 - *********************************  Finalize task instance  ************************************
[INFO] 2024-04-24 16:21:38.936 +0800 - ***********************************************************************************************
[INFO] 2024-04-24 16:21:38.937 +0800 - Upload output files: [] successfully
[INFO] 2024-04-24 16:21:38.956 +0800 - Send task execute status: KILL to master : 172.18.1.1:1234
[INFO] 2024-04-24 16:21:38.956 +0800 - Remove the current task execute context from worker cache
[INFO] 2024-04-24 16:21:38.957 +0800 - The current execute mode isn't develop mode, will clear the task execute file: /tmp/dolphinscheduler/exec/process/default/13010050770016/13377949373536_6/585/1483
[INFO] 2024-04-24 16:21:38.957 +0800 - Success clear the task execute file: /tmp/dolphinscheduler/exec/process/default/13010050770016/13377949373536_6/585/1483
[INFO] 2024-04-24 16:21:38.958 +0800 - FINALIZE_SESSION
